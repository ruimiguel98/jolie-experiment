# KAFKA PRODUCER PROPERTIES
spring.kafka.bootstrap-servers=host.docker.internal:9092
#send-topic-checkout=send-topic-checkout
#reply-topic-checkout=reply-topic-checkout
#consumer-group-checkout=consumer-group-checkout

kafka.consumer-group-payment=consumer-group-payment
kafka.consumer-group-cart=consumer-group-cart
kafka.consumer-group-email=consumer-group-email
kafka.consumer-group-order=consumer-group-order

#spring.kafka.producer.bootstrap-servers=host.docker.internal:9092
#spring.kafka.consumer.bootstrap-servers=host.docker.internal:9092
#spring.kafka.consumer.group-id=consumer-group
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

kafka.topic.request-cart=request-cart
kafka.topic.reply-cart=reply-cart
kafka.topic.request-payment=request-payment
kafka.topic.reply-payment=reply-payment
kafka.topic.request-order=request-order
kafka.topic.reply-order=reply-order
kafka.topic.request-email=request-email
kafka.topic.reply-email=reply-email

auto.create.topics.enable=false
spring.kafka.binder.replication-factor=1


# APP CONFIG
server.port:9004


# POSTGRES CONFIG
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=welcome1
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect